!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    3PHVSRC       ! 3-Phase Source model

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals
      INTEGER  IT_1, IT_2
      REAL     RT_1, t_fault, Ia(3), RT_2, RT_3

! Internal Variables
      LOGICAL  LVD1_1
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER ICX                                 ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 2
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 7
      NPGB      = NPGB + 3
      ICX       = NCX
      NCX       = NCX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      IT_1     = STOI(ISTOI + 1)
      IT_2     = STOI(ISTOI + 2)
      RT_1     = STOF(ISTOF + 1)
      t_fault  = STOF(ISTOF + 2)
      RT_2     = STOF(ISTOF + 6)
      RT_3     = STOF(ISTOF + 7)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Ia(IT_0) = STOF(ISTOF + 2 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 3 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[var_switch] Two State Switch 'Recording'
      IT_2 = NINT(CX(CXMAP(ICX+1)))

! 70:[mrun] Multiple Run Component 
! ----------------------------------------
! Multiple Run Initialization
! ----------------------------------------
      CALL COMPONENT_ID(ICALL_NO,936956736)
      CALL MRUNVINI(20,1,0)
      CALL PMR_FLAGS(0)


! Random or Sequential Variation of First Multiple Run Parameter:
! 20 Runs
      CALL MRUNVR(0,1,1,1,1,1,10,20,1,0,0.5,0.0008333,2.0,t_fault,"Fault&
     & Time")









! 80:[tfaultn] Timed Fault Logic 
! Timed fault logic
      IT_1 = 0
      IF ( TIME .GE. t_fault ) IT_1 = 1
      IF ( TIME .GE. (t_fault+0.1333) ) IT_1 = 0

! 90:[tpflt] Three Phase Fault 
      CALL E3PHFLT1_EXE(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3), (IBRCH+4), &
     &(IBRCH+5), (IBRCH+6),0,IT_1,7,0.01)
      LVD1_1 = (OPENBR( (IBRCH+1),SS).AND.OPENBR( (IBRCH+2),SS).AND.OPEN&
     &BR( (IBRCH+3),SS).AND.OPENBR( (IBRCH+4),SS).AND.OPENBR( (IBRCH+5),&
     &SS).AND.OPENBR( (IBRCH+6),SS))
      IVD1_1 = E_BtoI(LVD1_1)
      IF(FIRSTSTEP .OR. (IVD1_1 .NE. STORI(NSTORI))) THEN
         CALL PSCAD_AGI2(ICALL_NO,1331730409,1-IVD1_1,"AG1")
         STORI(NSTORI) = IVD1_1
      ENDIF
      NSTORI = NSTORI + 1

! 1:[source_3] Three Phase Voltage Source Model 2 'Source1'
! Three Phase Source: Source1  Type: L
!  
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3  = -1.8*PI_BY180
      RVD1_4 = RTCF(NRTCF+3)
      NRTCF  = NRTCF + 4
      CALL EMTDC_3PHVSRC(SS, (IBRCH+25), (IBRCH+26), (IBRCH+27), RVD1_4,&
     & .TRUE., RVD1_1 , RVD1_2, RVD1_3)
!

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'T1'
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+22), (IBRCH+23), (IBRCH+24),SS,1.0,0)

! 1:[source3] Three Phase Voltage Source Model 1 'Source2'
!  3-Phase source: Source2
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+7), (IBRCH+8), (IBRCH+9), (IBRCH+10), &
     &(IBRCH+11), (IBRCH+12), SS, NT_2(1),NT_2(2),NT_2(3), 0, RVD1_2, RV&
     &D1_1, 0.05, 1.0, 1.0, 1.0,RVD1_3, 1.0,0.02,0.05, 1.0,0.02,0.05, RV&
     &D1_4, RVD1_5, RVD1_6, RVD1_7)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOI(ISTOI + 1) = IT_1
      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = t_fault
      STOF(ISTOF + 6) = RT_2
      STOF(ISTOF + 7) = RT_3

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 2 + IT_0) = Ia(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      INTEGER  IT_2
      REAL     RT_1, Ia(3), RT_2, RT_3

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 3
      NCX       = NCX + 0
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      IT_2     = STOI(ISTOI + 2)
      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 6)
      RT_3     = STOF(ISTOF + 7)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Ia(IT_0) = STOF(ISTOF + 2 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[ammeter] Current Meter 'Ia'
      Ia(1) = ( CBR((IBRCH+13), SS))
      Ia(2) = ( CBR((IBRCH+14), SS))
      Ia(3) = ( CBR((IBRCH+15), SS))

! 20:[pgb] Output Channel 'Ia'

      DO IVD1_1 = 1, 3
         PGB(IPGB+1+IVD1_1-1) = Ia(IVD1_1)
      ENDDO

! 40:[datatap] Scalar/Array Tap 
      RT_1 = Ia(1)

! 50:[datatap] Scalar/Array Tap 
      RT_2 = Ia(2)

! 60:[datatap] Scalar/Array Tap 
      RT_3 = Ia(3)

! 70:[mrun] Multiple Run Component 

! --------------------------------------------------------
! Multiple Run Recording Initialization
! --------------------------------------------------------
      CALL COMPONENT_ID(ICALL_NO,936956736)
      CALL MRUNOINI(1,1,10,"mrunout.out")

! Multiple Run Recording

      CALL MRUNOR(0,1,1,1,1,1,10,0,IT_2,RT_1,"Fault Current")






! 90:[tpflt] Three Phase Fault 
!
! Multi-phase Fault Currents
!

! 1:[source3] Three Phase Voltage Source Model 1 'Source2'
! Calculate ource currents for ESYS65_B
! Sum currents in self and mutual interface branches

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 6) = RT_2
      STOF(ISTOF + 7) = RT_3

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 2 + IT_0) = Ia(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ICX                                 ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ICX       = NCX
      NCX       = NCX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[var_switch] Two State Switch 'Recording'

! 90:[tpflt] Three Phase Fault 
      CALL E3PHFLT1_CFG(1000000.0,0.0)

! 1:[source_3] Three Phase Voltage Source Model 2 'Source1'
      IF (0.00037044 .LE. 1.0E-38) THEN
        CALL E_BRANCH_CFG( (IBRCH+25),SS,1,0,0,1.0E-38,0.0,0.0)
        CALL E_BRANCH_CFG( (IBRCH+26),SS,1,0,0,1.0E-38,0.0,0.0)
        CALL E_BRANCH_CFG( (IBRCH+27),SS,1,0,0,1.0E-38,0.0,0.0)
      ELSE
        CALL E_BRANCH_CFG( (IBRCH+25),SS,0,1,0,0.0,0.00037044,0.0)
        CALL E_BRANCH_CFG( (IBRCH+26),SS,0,1,0,0.0,0.00037044,0.0)
        CALL E_BRANCH_CFG( (IBRCH+27),SS,0,1,0,0.0,0.00037044,0.0)
      ENDIF
      RTCF(NRTCF)   = 14.0*SQRT_2*SQRT_1BY3
      RTCF(NRTCF+1) = 60.0*TWO_PI
      RTCF(NRTCF+3) = 0.05
      NRTCF = NRTCF + 4

! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'T1'
      CALL COMPONENT_ID(ICALL_NO,248575879)
      RVD1_1 = ONE_3RD*300.0
      RVD1_2 = 13.8
      RVD1_3 = 230.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 1),0,RVD1_1,60.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 2),0,RVD1_1,60.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      CALL E_TF2W_CFG((IXFMR + 3),0,RVD1_1,60.0,0.1,0.0,RVD1_2,RVD1_3,1.&
     &0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(300.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+16),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+17),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+18),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+19),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+20),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+21),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+22), (IBRCH+23), (IBRCH+24),SS,RVD1_1,RVD1_&
     &2,0.2,1.25,60.0,1.0,1.0,0.1)

! 1:[source3] Three Phase Voltage Source Model 1 'Source2'
      CALL COMPONENT_ID(ICALL_NO,522245588)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,4,1,1,0,SS, (IBRCH+7), (IBRCH+8), (IBRCH+9), (I&
     &BRCH+10), (IBRCH+11), (IBRCH+12), 60.0,60.0,0.0,230.0,0.0,0.0,250.&
     &0,230.0, 230.0, 10.0, 84.0, 2.0, 1.0,1.0,0.1, 12.0,80.0,1.0,0.1)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NCX       = NCX + 0
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 3
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[pgb] Output Channel 'Ia'

! 40:[datatap] Scalar/Array Tap 

! 50:[datatap] Scalar/Array Tap 

! 60:[datatap] Scalar/Array Tap 

      RETURN
      END

